name: Test

on:
  workflow_call:

  push:
    branches: [main]

  pull_request:
    branches: [main]

concurrency:
  group: test-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-go:
    runs-on: ubuntu-20.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Setup Go environment
        uses: actions/setup-go@v3.0.0
        with:
          go-version: "1.17.6"

      - name: Test go project
        run: |
          make test-go

  test-ts:
    runs-on: ubuntu-20.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Setup node environment
        uses: actions/setup-node@v3
        with:
          node-version: 16.14.0

      - name: Fetch dependencies
        run: |
          yarn
      - name: Test typescript
        run: |
          yarn coverage
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        if: github.actor != 'dependabot[bot]'
        with:
          files: ./coverage/lcov.info
          verbose: true

  test-kotlin:
    runs-on: ubuntu-20.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "11"

      - name: Configure gradle.properties
        run: |
          cat <<EOF >> gradle.properties
          maven.credentials.username=${{ secrets.MAVEN_REPOSITORY_USERNAME }}
          maven.credentials.password=${{ secrets.MAVEN_REPOSITORY_PASSWORD }}
          EOF
      - name: Test kotlin
        uses: gradle/gradle-build-action@v2
        with:
          arguments: test

  test-python-poetry:
    timeout-minutes: 30
    runs-on: ubuntu-20.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - uses: actions/setup-python@v3
        with:
          python-version: 3.9

      - name: Install Python Poetry
        uses: abatilo/actions-poetry@v2.1.4
        with:
          poetry-version: 1.1.11

      - name: Install project dependencies
        run: |
          poetry install

      - name: Run unit tests
        run: |
          poetry run python -m unittest discover
